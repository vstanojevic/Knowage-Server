/*
 * Knowage, Open Source Business Intelligence suite
 * Copyright (C) 2016 Engineering Ingegneria Informatica S.p.A.
 *
 * Knowage is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Knowage is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.eng.spagobi.kpi.metadata;

import java.util.HashSet;
import java.util.Set;

import it.eng.spagobi.commons.dao.dto.SbiCategory;
import it.eng.spagobi.commons.metadata.SbiHibernateModel;

/**
 * SbiKpiKpi generated by hbm2java
 */
public class SbiKpiKpi extends SbiHibernateModel implements java.io.Serializable {

	private SbiKpiKpiId sbiKpiKpiId = new SbiKpiKpiId();
	private String name;
	private String definition;
	private String cardinality;
	private String placeholder;
	private int thresholdId;
	private SbiCategory category;
	private Character active;

	private Set<SbiKpiRuleOutput> sbiKpiRuleOutputs = new HashSet<>();

	private Set<SbiKpiTargetValue> sbiKpiTargetValues = new HashSet<>();

	public SbiKpiKpi() {
	}

	/**
	 * @return the sbiKpiKpiId
	 */
	public SbiKpiKpiId getSbiKpiKpiId() {
		return sbiKpiKpiId;
	}

	/**
	 * @param sbiKpiKpiId the sbiKpiKpiId to set
	 */
	public void setSbiKpiKpiId(SbiKpiKpiId sbiKpiKpiId) {
		this.sbiKpiKpiId = sbiKpiKpiId;
	}

	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * @param name the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * @return the definition
	 */
	public String getDefinition() {
		return definition;
	}

	/**
	 * @param definition the definition to set
	 */
	public void setDefinition(String definition) {
		this.definition = definition;
	}

	/**
	 * @return the cardinality
	 */
	public String getCardinality() {
		return cardinality;
	}

	/**
	 * @param cardinality the cardinality to set
	 */
	public void setCardinality(String cardinality) {
		this.cardinality = cardinality;
	}

	/**
	 * @return the placeholder
	 */
	public String getPlaceholder() {
		return placeholder;
	}

	/**
	 * @param placeholder the placeholder to set
	 */
	public void setPlaceholder(String placeholder) {
		this.placeholder = placeholder;
	}

	/**
	 * @return the thresholdId
	 */
	public int getThresholdId() {
		return thresholdId;
	}

	/**
	 * @param thresholdId the thresholdId to set
	 */
	public void setThresholdId(int thresholdId) {
		this.thresholdId = thresholdId;
	}

	/**
	 * @return the category
	 */
	public SbiCategory getCategory() {
		return category;
	}

	/**
	 * @param category the category to set
	 */
	public void setCategory(SbiCategory category) {
		this.category = category;
	}

	/**
	 * @return the sbiKpiRuleOutputs
	 */
	public Set<SbiKpiRuleOutput> getSbiKpiRuleOutputs() {
		return sbiKpiRuleOutputs;
	}

	/**
	 * @param sbiKpiRuleOutputs the sbiKpiRuleOutputs to set
	 */
	public void setSbiKpiRuleOutputs(Set<SbiKpiRuleOutput> sbiKpiRuleOutputs) {
		this.sbiKpiRuleOutputs = sbiKpiRuleOutputs;
	}

	/**
	 * @return the active
	 */
	public Character getActive() {
		return active;
	}

	/**
	 * @param active the active to set
	 */
	public void setActive(Character active) {
		this.active = active;
	}

	/**
	 * @return the sbiKpiTargetValues
	 */
	public Set<SbiKpiTargetValue> getSbiKpiTargetValues() {
		return sbiKpiTargetValues;
	}

	/**
	 * @param sbiKpiTargetValues the sbiKpiTargetValues to set
	 */
	public void setSbiKpiTargetValues(Set<SbiKpiTargetValue> sbiKpiTargetValues) {
		this.sbiKpiTargetValues = sbiKpiTargetValues;
	}

	@Override
	public int hashCode() {
		return sbiKpiKpiId != null ? sbiKpiKpiId.hashCode() : super.hashCode();
	}

	@Override
	public boolean equals(Object obj) {
		return obj instanceof SbiKpiKpi && sbiKpiKpiId != null && sbiKpiKpiId.equals(((SbiKpiKpi) obj).getSbiKpiKpiId()) || super.equals(obj);
	}
}
